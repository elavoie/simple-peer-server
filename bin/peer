#!/usr/bin/env node
var SimplePeer = require('simple-peer')
var SimpleSocket = require('simple-websocket')
var wrtc = require('electron-webrtc')()

var host = process.argv[2]
console.log('host: ' + host)
var initiator = Boolean(process.argv[3])
console.log('initiator: ' + initiator)
var socket = new SimpleSocket('ws://' + host + (initiator ? '/initiator' : '/peer'))

console.log('socket: ' + socket)

var timeout = null
function ping () {
  if (p) {
    p.send('ping')
    timeout = setTimeout(ping, 1000)   
  }
}

function shutdown() {
  console.log('shutdown');
  clearTimeout(timeout)
  if (p) {
    p.destroy()
    p = null
  }
  if (socket) { 
    socket.destroy()
    socket = null
  }
  wrtc.close()
}

// listen for errors
wrtc.on('error', function (err, source) {
  console.log('wrtc error: ' + err)
  shutdown()
})

process.on('SIGINT', function() {
  shutdown()  
});

var p = null
socket.on('connect', function () {
  p = new SimplePeer({ 'initiator': initiator, wrtc: wrtc })

  p.on('signal', function (data) {
    console.log('signal: ' + JSON.stringify(data))
    socket.send(JSON.stringify(data))
  })

  p.on('connect', function () {
    console.log('connected')
    if (initiator) ping()
  })

  p.on('close', function () {
    console.log('closed')
    shutdown()
  })

  p.on('error', function (err) {
    console.log('error: ' + err)
    shutdown()
  })

  p.on('data', function (data) {
    console.log('data: ' + data)
    if (data.toString() === 'ping') {
      p.send('pong')
    }
  })
})

socket.on('data', function (data) {
  if (p) p.signal(JSON.parse(data))
})

